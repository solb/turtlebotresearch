The code relies on Changhyun Choi's OrganizedEdgeDetection class; at the time of writing, this is only available in the trunk version of the Point Cloud Library, which doesn't even come close to compiling.  The appendix of my accompanying report has some preliminary information about how to compile the current latest release-quality build of the library, PCL 1.6.0.  It also includes a general guide to backporting Choi's class into this release, but makes reference to patches needing to be applied in order to get things to compile.  Well, here they are; when you get to the step that alludes to them, substitute the following steps:
$ patch common/include/pcl/impl/point_types.hpp <path to the included point_types.hpp.patch> #this line is absolutely necessary, assuming you're backporting atop 1.6.0
$ patch features/include/pcl/features/organized_edge_detection.h <path to the included organized_edge_detection.h.patch> #this line is necessary only if you're using r6666 of Choi's code, as the compilation issue is fixed in r6701 and later
$ patch 2d/include/pcl/2d/impl/edge.hpp <path to the included edge.hpp.patch> #this line is necessary only if you're using [r6598,r6666) of the 2d subsystem, as the segfault was introduced in with the new API and fixed by Choi upon his addition of templates to his own code
IMPORTANT: It is important to add the filters package, in addition to the 2d one, to the end of the SUBSYS_DEPS line in the CMakeLists.txt file in the directory of the features package.  After that, everything should compile...
